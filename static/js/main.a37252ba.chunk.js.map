{"version":3,"sources":["components/Order/Order.css","serverConfig.js","hoc/Aux.js","firebaseConfig.js","store/actions/auth.js","store/actions/actionTypes.js","store/actions/products.js","store/actions/cart.js","store/actions/addresses.js","store/actions/orders.js","store/actions/ui.js","components/Navigation/NavBar/NavBar.js","components/Layout/Layout.js","components/Auth/Auth.js","components/AddProduct/AddProduct.js","components/Home/Product/Product.js","components/Home/Products/Products.js","components/Home/Categories/Categories.js","components/Home/Home.js","components/Quantity/Quantity.js","components/Cart/Summary/Summary.js","components/Cart/Cart.js","components/Addresses/Addresses.js","components/Order/Order.js","components/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/ui.js","store/reducers/products.js","store/reducers/cart.js","store/reducers/addresses.js","store/reducers/orders.js","store/rootReducer.js","store/storeConfig.js","index.js","components/Orders/Orders.css","components/Cart/Cart.css","components/Addresses/Addresses.css","components/Home/Product/Product.css","components/Auth/Auth.css","components/Quantity/Quantity.css","components/AddProduct/AddProduct.css","components/Cart/Summary/Summary.css","components/Layout/Layout.css","components/Home/Products/Products.css","components/Home/Home.css"],"names":["module","exports","container","topMsg","content","title","total","expensiveMsg","selectTime","timeBtns","selectedTime","time","orderBtn","thanks","continueBtn","BASE_URL","withRouter","props","children","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","auth","window","recaptchaVerifier","RecaptchaVerifier","size","callback","response","console","log","storage","getUsers","dispatch","ref","once","then","snap","snapData","val","storeUsers","catch","err","Error","users","type","doesUserExists","phone","getState","Promise","resolve","reject","user","uphone","setUser","uid","storeUser","localStorage","setItem","JSON","stringify","signOut","clear","storeCategories","categories","storeNewCategory","name","storeProducts","products","doesProductExists","category","exists","Object","keys","map","key","addProductInStore","productObj","storeCart","cart","storeAddresses","addresses","storeNewAddress","address","deleteAddressFromStore","index","getOrders","storeOrders","orders","storeNewOrder","order","NavBar","signOutHandler","_this","Materialize","toast","authStatus","react_default","a","createElement","lib","href","this","Fragment","onClick","brand","right","Component","connect","state","Layout","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Aux","Navigation_NavBar_NavBar","className","classes","React","Auth","phoneNumber","isOtpNeeded","isError","errorMsg","isLoading","otp","phoneNotExists","handleSignin","appVerifier","isNewUser","signIn","setState","result","handleOtp","code","that","assertThisInitialized","confirmationResult","confirm","setNewUser","error","_this2","Redirect","to","pathname","waves","authLoading","preloader","label","value","onChange","e","target","disabled","ui","signInWithPhoneNumber","obj","set","AddProduct","loading","isAdmin","file","undefined","selectedCategory","newCatName","newCatStatus","productName","productPrice","productDescription","handleFile","document","getElementById","files","handleAddProduct","isCategory","trim","parseInt","storageRef","put","snapshot","addProduct","categoryChangeHandler","newCategoryHandler","addCategory","setTimeout","_this3","placeholder","selected","accept","id","userLoading","lastKey","length","update","defineProperty","price","description","isImg","push","Product","addProductHandler","doesExistInCart","fbKey","item","objectSpread","info","qty","addToCart","getDownloadURL","url","src","image","add","Products","Home_Product_Product","Categories","active","Home_Products_Products","Home","isProductsLoading","isUiLoading","loaderContainer","Home_Categories_Categories","productsLoding","uiLoading","Quantity","quantity","removeQtyHandler","setQty","addQtyHandler","iconContainer","icon","setProductQty","Summary","placeOrder","Cart","removeItemHandler","removeItem","cartLoading","concat","card","components_Quantity_Quantity","removeBtn","cartHeading","heading","Cart_Summary_Summary","removeItemFromCart","Addresses","newAddressWindow","houseNo","locality","pinCode","city","Icon","addAddressHandler","object","addAddress","inputHandler","deleteAddressHandler","deleteAddress","getAddresses","_React$createElement","addCard","subtitle","_React$createElement2","button","floating","large","addBtn","toConsumableArray","indexx","filter","Order","deliveryTime","orderPlaced","shopMore","onTimeChanged","currentTarget","placeOrderHandler","orderObj","addHandler","components_Auth_Auth","components_Addresses_Addresses","date","Date","toLocaleDateString","toLocaleTimeString","Orders","reverse","itemsCollectionItem","itemSpan","orderTitle","orderTime","orderAdd","itemsHeading","App","getProducts","getUser","getCategories","getCart","components_Layout_Layout","Switch","Route","path","exact","component","userFromStorage","getItem","parse","0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","isAuthenticated","reducer","arguments","action","productsLoading","assign","computeTotal","splice","newOrder","combineReducers","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","store","createStore","rootReducer","app","es","BrowserRouter","src_App","ReactDOM","render","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","input","sidenav","hiddenButton"],"mappings":"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","file":"static/js/main.a37252ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Order__container__1sN68\",\"topMsg\":\"Order__topMsg__23HOJ\",\"content\":\"Order__content__1Td-4\",\"title\":\"Order__title__1hgzL\",\"total\":\"Order__total__2N9eq\",\"expensiveMsg\":\"Order__expensiveMsg__2zp7U\",\"selectTime\":\"Order__selectTime__1qpgt\",\"timeBtns\":\"Order__timeBtns__3rn_i\",\"selectedTime\":\"Order__selectedTime__38DCb\",\"time\":\"Order__time__2DvtM\",\"orderBtn\":\"Order__orderBtn__1RZ0e\",\"thanks\":\"Order__thanks__270lG\",\"continueBtn\":\"Order__continueBtn__3UNoz\"};","export const BASE_URL = \"/balajistores-webapp\";","import { withRouter } from 'react-router-dom';\n\nconst aux = (props) => props.children || null;\n\nexport default withRouter(aux);","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nvar config = {\n    apiKey: \"AIzaSyDJ8qp2D8mupTsTS6zmpGXUeN9BDxMtYdQ\",\n    authDomain: \"balaji-store.firebaseapp.com\",\n    databaseURL: \"https://balaji-store.firebaseio.com\",\n    projectId: \"balaji-store\",\n    storageBucket: \"balaji-store.appspot.com\",\n    messagingSenderId: \"388232322676\"\n};\n\nfirebase.initializeApp(config);\nvar db = firebase.database();\n\nexport var auth = firebase.auth();\nwindow.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n    'size': 'invisible',\n    'callback': function (response) {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        // onSignInSubmit();\n        console.log(response);\n    }\n});\n\nexport default db;\nexport const storage = firebase.storage();","import db, { auth } from '../../firebaseConfig';\nimport { authStartLoading, authStopLoading, userStartLoading, userStopLoading } from './index';\nimport { STORE_USERS, STORE_USER } from './actionTypes';\n\nexport const getUser = () => {\n    return (dispatch, getState) => {\n        dispatch(userStartLoading());\n        let user = getState().auth.user;\n        if (user) {\n            dispatch(userStopLoading());\n            // lite\n        } else {\n            let userFromStorage = localStorage.getItem('sn-user');\n            if (userFromStorage) {\n                userFromStorage = JSON.parse(userFromStorage);\n                dispatch(storeUser(userFromStorage));\n            }\n            dispatch(userStopLoading());\n        }\n    }\n}\n\nexport const signIn = (phoneNumber, appVerifier, isNewUser) => {\n    return dispatch => {\n        dispatch(authStartLoading());\n        return new Promise((resolve, reject) => {\n            if (isNewUser) {\n                auth.signInWithPhoneNumber(phoneNumber, appVerifier)\n                    .then(function (confirmationResult) {\n                        dispatch(authStopLoading());\n                        // SMS sent. Prompt user to type the code from the message, then sign the\n                        // user in with confirmationResult.confirm(code).\n                        window.confirmationResult = confirmationResult;\n                        console.log(phoneNumber);\n                        console.log(\"OTP sent to new user\");\n                        resolve(\"otpNeeded\");\n                        console.log(confirmationResult);\n                    }).catch(function (error) {\n                        dispatch(authStopLoading());\n\n                        // Error; SMS not sent\n                        // that.setState({ isError: true });\n                        if (error.code === 'auth/invalid-phone-number')\n                            reject('Please enter a valid phone number');\n                        else\n                            reject('Some error ocurred. Please try again.');\n\n                        console.log(error);\n                    });\n            } else {\n                dispatch(doesUserExists(phoneNumber))\n                    .then(result => {\n                        if (!result) {\n                            auth.signInWithPhoneNumber(phoneNumber, appVerifier)\n                                .then(function (confirmationResult) {\n                                    dispatch(authStopLoading());\n                                    // SMS sent. Prompt user to type the code from the message, then sign the\n                                    // user in with confirmationResult.confirm(code).\n                                    window.confirmationResult = confirmationResult;\n                                    resolve(\"phoneNotExistsOtpNeeded\");\n                                    console.log(confirmationResult);\n                                }).catch(function (error) {\n                                    dispatch(authStopLoading());\n\n                                    // Error; SMS not sent\n                                    // that.setState({ isError: true });\n                                    if (error.code === 'auth/invalid-phone-number')\n                                        reject('Please enter a valid phone number');\n                                    else\n                                        reject('Some error ocurred. Please try again.');\n\n                                    console.log(error);\n                                });\n                        } else {\n                            auth.signInWithPhoneNumber(phoneNumber, appVerifier)\n                                .then(function (confirmationResult) {\n                                    dispatch(authStopLoading());\n                                    // SMS sent. Prompt user to type the code from the message, then sign the\n                                    // user in with confirmationResult.confirm(code).\n                                    window.confirmationResult = confirmationResult;\n                                    resolve(\"otpNeeded\");\n                                    console.log(confirmationResult);\n                                }).catch(function (error) {\n                                    dispatch(authStopLoading());\n\n                                    // Error; SMS not sent\n                                    // that.setState({ isError: true });\n                                    if (error.code === 'auth/invalid-phone-number')\n                                        reject('Please enter a valid phone number');\n                                    else\n                                        reject('Some error ocurred. Please try again.');\n\n                                    console.log(error);\n                                });\n                        }\n                    });\n            }\n        })\n    }\n}\n\nexport const getUsers = () => {\n    return dispatch => {\n        db.ref('/users/').once('value')\n            .then((snap) => {\n                var snapData = snap.val();\n                console.log(snapData);\n                dispatch(storeUsers(snapData));\n            })\n            .catch(err => {\n                dispatch(storeUsers({ \"Error\": \"Error\" }));\n                console.log(err)\n            });\n    }\n}\n\nexport const storeUsers = (users) => {\n    return {\n        type: STORE_USERS,\n        users\n    }\n}\n\nexport const doesUserExists = (phone) => {\n    return (dispatch, getState) => {\n        return new Promise((resolve, reject) => {\n            let users = getState().auth.users;\n            if (users) {\n                for (let user in users) {\n                    console.log(users[user]);\n                    if (users[user].uphone === phone) {\n                        resolve(true);\n                    }\n                }\n            } else {\n                resolve(false);\n            }\n            resolve(false);\n        })\n    }\n}\n\nexport const setNewUser = (uid, phone) => {\n    return (dispatch, getState) => {\n        let users = getState().auth.users;\n        let obj = {\n            uid,\n            uphone: phone,\n            // uname: name,\n            // uemail: email\n        };\n        db.ref('users/' + uid).set(obj);\n        if(!users)\n            users = {};\n        users[uid] = obj;\n        dispatch(storeUsers(users));\n        dispatch(setUser(obj.uid));\n    }\n}\n\nexport const setUser = (uid) => {\n    return dispatch => {\n        db.ref('/users/' + uid).once('value')\n            .then((snap) => {\n                var snapData = snap.val();\n                dispatch(storeUser(snapData));\n                localStorage.setItem('sn-user', JSON.stringify(snapData));\n            })\n            .catch(err => {\n                dispatch(storeUser(null));\n                console.log(err);\n            });\n    }\n}\n\nexport const storeUser = (user) => {\n    return {\n        type: STORE_USER,\n        user\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(storeUser(null));\n        dispatch(getUsers());\n    }\n}","// ui\nexport const AUTH_START_LOADING = \"AUTH_START_LOADING\";\nexport const AUTH_STOP_LOADING = \"AUTH_STOP_LOADING\";\nexport const USER_START_LOADING = \"USER_START_LOADING\";\nexport const USER_STOP_LOADING = \"USER_STOP_LOADING\";\nexport const UI_START_LOADING = \"UI_START_LOADING\";\nexport const UI_STOP_LOADING = \"UI_STOP_LOADING\";\nexport const PRODUCTS_START_LOADING = \"PRODUCTS_START_LOADING\";\nexport const PRODUCTS_STOP_LOADING = \"PRODUCTS_STOP_LOADING\";\nexport const CART_START_LOADING = \"CART_START_LOADING\";\nexport const CART_STOP_LOADING = \"CART_STOP_LOADING\";\n\n// auth\nexport const STORE_USERS = \"STORE_USERS\";\nexport const STORE_USER = \"STORE_USER\";\n\n// products\nexport const STORE_CATEGORIES = \"STORE_CATEGORIES\";\nexport const STORE_NEW_CATEGORY = \"STORE_NEW_CATEGORY\";\nexport const STORE_PRODUCTS = \"STORE_PRODUCTS\";\nexport const ADD_PRODUCT_IN_STORE = \"ADD_PRODUCT_IN_STORE\";\n\n// cart\nexport const STORE_CART = \"STORE_CART\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_ITEM_FROM_CART = \"REMOVE_ITEM_FROM_CART\";\nexport const SET_PRODUCT_QTY = \"SET_PRODUCT_QTY\";\n\n// addresses\nexport const STORE_ADDRESSES = \"STORE_ADDRESSES\";\nexport const STORE_NEW_ADDRESS = \"STORE_NEW_ADDRESS\";\nexport const DELETE_ADDRESS_FROM_STORE = \"DELETE_ADDRESSES_FROM_STORE\";\n\n// orders\nexport const STORE_ORDERS = \"STORE_ORDERS\";\nexport const STORE_NEW_ORDER = \"STORE_NEW_ORDER\";","import db from '../../firebaseConfig';\nimport { STORE_CATEGORIES, STORE_NEW_CATEGORY, STORE_PRODUCTS, ADD_PRODUCT_IN_STORE } from './actionTypes';\nimport { productsStartLoading, productsStopLoading, uiStartLoading, uiStopLoading } from './index';\n\nexport const addCategory = (name) => {\n    return (dispatch, getState) => {\n        return new Promise((resolve, reject) => {\n            let categories = getState().products.categories;\n            let lastKey = 0;\n            let exists = false;\n            if (categories) {\n                categories.map(category => {\n                    if (category === name) {\n                        exists = true;\n                        reject(\"exists\");\n                    }\n                })\n                lastKey = categories.length;\n            }\n            if (!exists) {\n                db.ref('/categories/').update({\n                    [lastKey]: name\n                });\n                dispatch(storeNewCategory(name));\n                resolve(\"added\");\n            }\n        })\n    }\n}\n\nexport const getCategories = () => {\n    return dispatch => {\n        dispatch(uiStartLoading());\n        db.ref('/categories/').once('value')\n            .then((snap) => {\n                dispatch(uiStopLoading());\n                var snapData = snap.val();\n                console.log(snapData);\n                dispatch(storeCategories(snapData));\n            })\n            .catch(err => {\n                dispatch(uiStopLoading());\n                dispatch(storeCategories({ \"0\": \"Error\" }));\n                console.log(err);\n            });\n    }\n}\n\nexport const storeCategories = (categories) => {\n    return {\n        type: STORE_CATEGORIES,\n        categories\n    }\n}\n\nexport const storeNewCategory = (name) => {\n    return {\n        type: STORE_NEW_CATEGORY,\n        name\n    }\n}\n\nexport const addProduct = (name, category, price, description, isImg) => {\n    return dispatch => {\n        return new Promise((resolve) => {\n            dispatch(doesProductExists(name, category))\n                .then(result => {\n                    console.log(result);\n                    if (result === \"exists\") {\n                        resolve(\"Product exists!\");\n                    } else if (result === \"notExists\") {\n                        let key = db.ref('/products/' + category + '/').push().key;\n                        db.ref('/products/' + category + '/' + key).set({\n                            name,\n                            category,\n                            price,\n                            description,\n                            isImg\n                        })\n                        dispatch(addProductInStore({name, category, price, description, isImg}, key));\n                        resolve(\"Product added!\");\n                    } else {\n                        resolve(\"Error occurred while adding product!\")\n                    }\n                })\n        })\n    }\n}\n\nexport const getProducts = () => {\n    return dispatch => {\n        dispatch(productsStartLoading());\n        db.ref('/products/').once('value')\n            .then((snap) => {\n                var snapData = snap.val();\n                console.log(snapData);\n                dispatch(productsStopLoading());\n                dispatch(storeProducts(snapData));\n            })\n            .catch(err => {\n                dispatch(productsStopLoading())\n                dispatch(storeProducts(\"error\"));\n                console.log(err);\n            });\n    }\n}\n\nexport const storeProducts = (products) => {\n    return {\n        type: STORE_PRODUCTS,\n        products\n    }\n}\n\nexport const doesProductExists = (name, category) => {\n    return (dispatch, getState) => {\n        return new Promise((resolve) => {\n            let exists = false;\n            let products = getState().products.products;\n            if(!products)\n                products = {};\n            if (products[category]) {\n                Object.keys(products[category]).map(key => {\n                    // console.log(products[category][key])\n                    if (products[category][key].name === name) {\n                        exists = true;\n                        resolve(\"exists\");\n                    }\n                })\n            }\n            if (!exists)\n                resolve(\"notExists\")\n        })\n    }\n}\n\nexport const addProductInStore = (productObj, key) => {\n    return {\n        type: ADD_PRODUCT_IN_STORE,\n        productObj,\n        key\n    }\n}","import { STORE_CART, ADD_TO_CART, REMOVE_ITEM_FROM_CART, SET_PRODUCT_QTY } from \"./actionTypes\";\nimport {cartStartLoading, cartStopLoading} from './index';\n\nexport const getCart = () => {\n    return dispatch => {\n        dispatch(cartStartLoading());\n        let cart = localStorage.getItem('sn-cart');\n        if(cart) {\n            dispatch(cartStopLoading());\n            console.log(\"Cart found in storage\");\n            dispatch(storeCart(JSON.parse(cart)))\n        } else {\n            dispatch(cartStopLoading());\n            console.log(\"Cart not found in storage\");\n            dispatch(storeCart([]))\n        }\n    }\n}\n\nexport const addToCart = (item) => {\n    return {\n        type: ADD_TO_CART,\n        item\n    }\n}\n\nexport const storeCart = (cart) => {\n    return {\n        type: STORE_CART,\n        cart\n    }\n\n}\n\nexport const doesExistInCart = (key) => {\n    return (dispatch, getState) => {\n        return new Promise((resolve) => {\n            let cart = getState().cart.cart;\n            let exists = false;\n            cart.map(item => {\n                if(item.key === key)\n                    exists = true;\n            })\n            if(exists)\n                resolve(\"exists\");\n            else\n                resolve(\"notExists\");\n        })\n    }\n}\n\nexport const removeItemFromCart = (key) => {\n    return {\n        type: REMOVE_ITEM_FROM_CART,\n        key\n    }\n}\n\nexport const setProductQty = (key, qty) => {\n    console.log(\"set product qty called\", key, qty)\n    return {\n        type: SET_PRODUCT_QTY,\n        key,\n        qty\n    }\n}","import { uiStartLoading , uiStopLoading} from \"./index\";\nimport db from '../../firebaseConfig';\nimport {STORE_ADDRESSES, STORE_NEW_ADDRESS, DELETE_ADDRESS_FROM_STORE} from './actionTypes';\n\nexport const getAddresses = () => {\n    return (dispatch, getState) => {\n        dispatch(uiStartLoading());\n        let user = getState().auth.user;\n        if(user) {\n            let uid = user.uid;\n            db.ref('/users/' + uid + '/uaddresses/').once('value')\n                .then((snap) => {\n                    dispatch(uiStopLoading());\n                    var snapData = snap.val();\n                    dispatch(storeAddresses(snapData));\n                })\n                .catch(err => {\n                    dispatch(uiStopLoading());\n                    dispatch(storeAddresses([]));\n                    console.log(err);\n                });\n        }\n    }\n}\n\nexport const storeAddresses = (addresses) => {\n    return {\n        type: STORE_ADDRESSES,\n        addresses\n    }\n}\n\nexport const addAddress = (address) => {\n    return (dispatch, getState) => {\n        let uid = getState().auth.user.uid;\n        let addresses = [...getState().addresses.addresses];\n        addresses.push(address);\n        db.ref('/users/' + uid + '/uaddresses/').set(addresses);\n        dispatch(storeNewAddress(address));\n    }\n}\n\nexport const storeNewAddress = (address) => {\n    return {\n        type: STORE_NEW_ADDRESS,\n        address\n    }\n}\n\nexport const deleteAddress = (indexx) => {\n    return (dispatch, getState) => {\n        let uid = getState().auth.user.uid;\n        let addresses = [...getState().addresses.addresses];\n        addresses = addresses.filter((address, index) => index!==indexx)\n        db.ref('/users/' + uid + '/uaddresses/').set(addresses);\n        dispatch(deleteAddressFromStore(indexx));\n    }\n}\n\nexport const deleteAddressFromStore = (index) => {\n    return {\n        type: DELETE_ADDRESS_FROM_STORE,\n        index\n    }\n}","import db from '../../firebaseConfig';\nimport { uiStartLoading, uiStopLoading, storeCart } from './index';\nimport { STORE_ORDERS, STORE_NEW_ORDER } from './actionTypes';\n\nexport const getOrders = () => {\n    return (dispatch, getState) => {\n        dispatch(uiStartLoading());\n        return new Promise(resolve => {\n            let user = getState().auth.user;\n            if (user) {\n                let uid = user.uid;\n                db.ref('/users/' + uid + '/uorders/').once('value')\n                    .then((snap) => {\n                        dispatch(uiStopLoading());\n                        var snapData = snap.val();\n                        if (!snapData)\n                            snapData = [];\n                        dispatch(storeOrders(snapData));\n                        resolve(snapData)\n                    })\n                    .catch(err => {\n                        dispatch(uiStopLoading());\n                        dispatch(storeOrders([]));\n                        console.log(err);\n                        resolve(\"error\");\n                    });\n            } else {\n                resolve(\"error\");\n            }\n        })\n    }\n}\n\nexport const storeOrders = (orders) => {\n    return {\n        type: STORE_ORDERS,\n        orders\n    }\n}\n\nexport const placeOrder = (order) => {\n    return (dispatch, getState) => {\n        dispatch(uiStartLoading());\n        return new Promise(resolve => {\n            let user = getState().auth.user;\n            if (user) {\n                let uid = user.uid;\n                dispatch(getOrders())\n                    .then(result => {\n                        if (result === 'error') {\n                            resolve(\"error\");\n                        } else {\n                            let orders = result;\n                            let date = new Date();\n                            order.time = date.toLocaleDateString() + ' at ' + date.toLocaleTimeString();\n                            orders.push(order);\n                            db.ref('/users/' + uid + '/uorders/').set(orders);\n                            dispatch(storeNewOrder(order, date));\n                            localStorage.removeItem('sn-cart');\n                            dispatch(storeCart([]));\n                            dispatch(uiStopLoading());\n                            resolve(\"order placed\");\n                        }\n                    })\n            }\n        })\n    }\n}\n\nexport const storeNewOrder = (order, time) => {\n    return {\n        type: STORE_NEW_ORDER,\n        order,\n        time\n    }\n}","import { AUTH_STOP_LOADING, AUTH_START_LOADING, USER_START_LOADING, USER_STOP_LOADING, UI_START_LOADING, UI_STOP_LOADING, PRODUCTS_START_LOADING, PRODUCTS_STOP_LOADING, CART_START_LOADING, CART_STOP_LOADING } from './actionTypes';\n\nexport const authStartLoading = () => {\n    return {\n        type: AUTH_START_LOADING\n    }\n}\n\nexport const authStopLoading = () => {\n    return {\n        type: AUTH_STOP_LOADING\n    }\n}\n\nexport const userStartLoading = () => {\n    return {\n        type: USER_START_LOADING\n    }\n}\n\nexport const userStopLoading = () => {\n    return {\n        type: USER_STOP_LOADING\n    }\n}\n\nexport const uiStartLoading = () => {\n    return {\n        type: UI_START_LOADING\n    }\n}\n\nexport const uiStopLoading = () => {\n    return {\n        type: UI_STOP_LOADING\n    }\n}\n\nexport const productsStartLoading = () => {\n    return {\n        type: PRODUCTS_START_LOADING\n    }\n}\n\nexport const productsStopLoading = () => {\n    return {\n        type: PRODUCTS_STOP_LOADING\n    }\n}\n\nexport const cartStartLoading = () => {\n    return {\n        type: CART_START_LOADING\n    }\n}\n\nexport const cartStopLoading = () => {\n    return {\n        type: CART_STOP_LOADING\n    }\n}","import React, { Component } from 'react';\nimport { Navbar, NavItem, Icon } from 'react-materialize';\nimport {connect} from 'react-redux';\nimport {signOut} from '../../../store/actions/index';\nimport {BASE_URL} from '../../../serverConfig';\n\nclass NavBar extends Component {\n    signOutHandler = () => {\n        this.props.signOut();\n        window.Materialize.toast('Signed out!', 3000);\n    }\n    \n    render() {\n        let authStatus = <NavItem href={BASE_URL + '/auth'}>Login &amp; Sign Up</NavItem>;\n        if(this.props.user) {\n            authStatus = (\n                <React.Fragment>\n                    <NavItem href={BASE_URL + '/addresses'}>Addresses</NavItem>\n                    <NavItem href={BASE_URL + '/orders'}>My Orders</NavItem>\n                    <NavItem onClick={this.signOutHandler}>Sign Out</NavItem>\n                </React.Fragment>\n            )\n        }\n        return (\n            <Navbar brand='Balaji Stores' href={BASE_URL + '/'} right>\n                <NavItem href={BASE_URL + '/'}>Home</NavItem>\n                <NavItem href={BASE_URL + '/cart'}>Cart</NavItem>\n                {authStatus}\n            </Navbar>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React from 'react';\nimport { SideNav, SideNavItem, Button } from 'react-materialize';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Aux from '../../hoc/Aux';\nimport NavBar from '../Navigation/NavBar/NavBar';\nimport classes from './Layout.css';\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Aux>\n        <NavBar />\n        <main className={classes.content}>\n          {this.props.children}\n        </main>\n      </Aux>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Layout));","import React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Input, Button, Preloader } from 'react-materialize';\nimport classes from './Auth.css';\nimport {BASE_URL} from '../../serverConfig';\nimport { signIn, setNewUser, setUser, signOut } from '../../store/actions/index';\n\nclass Auth extends Component {\n    state = {\n        phoneNumber: '',\n        isOtpNeeded: false,\n        isError: false,\n        errorMsg: '',\n        isLoading: false,\n        otp: '',\n        phoneNotExists: false\n    }\n\n    handleSignin = () => {\n        var phoneNumber = '+91' + this.state.phoneNumber;\n        var appVerifier = window.recaptchaVerifier;\n\n        let isNewUser = false;\n        if (this.state.phoneNotExists)\n            isNewUser = true;\n\n        this.props.signIn(phoneNumber, appVerifier, isNewUser)\n            .catch(err => this.setState({ isError: true, errorMsg: err }))\n            .then(result => {\n                if (result === 'otpNeeded') {\n                    this.setState({ isOtpNeeded: true });\n                    console.log(\"Otp neeeded\");\n                } else if (result === 'phoneNotExistsOtpNeeded') {\n                    this.setState({ phoneNotExists: true, isOtpNeeded: true });\n                    console.log(\"Phone not exists\");\n                }\n            })\n    }\n\n    handleOtp = () => {\n        this.setState({ isLoading: true });\n\n        var code = this.state.otp;\n\n        let that = this;\n        window.confirmationResult.confirm(code).then(function (result) {\n\n            // User signed in successfully.\n            window.Materialize.toast('Signed in!', 3000);\n            var user = result.user;\n            that.props.setUser(user.uid);\n            console.log(result);\n            if (that.state.phoneNotExists) {\n                that.props.setNewUser(result.user.uid, '+91' + that.state.phoneNumber);\n            }\n            that.setState({ isLoading: false, phoneNotExists: false });\n            // ...\n        }).catch(function (error) {\n            that.setState({ isLoading: false });\n\n            // User couldn't sign in (bad verification code?)\n            that.setState({ isError: true });\n\n            if (error.code === 'auth/invalid-verification-code') that.setState({ isError: true, errorMsg: 'Please enter a valid OTP' });\n            else that.setState({ isError: true, errorMsg: 'Some error ocurred. Please try again.' });\n            console.log(error);\n        });\n    }\n\n    render() {\n        if (this.props.user) {\n            return <Redirect\n                to={{\n                    pathname: BASE_URL + \"/\",\n                }}\n            />\n        }\n\n        let continueBtn = <Button waves='light' className={classes.content} onClick={this.handleSignin}>Continue</Button>;\n        if (this.props.authLoading) {\n            continueBtn = <div className={classes.preloader}><Preloader size='small' /></div>\n        }\n        if (this.state.isOtpNeeded) {\n            continueBtn = (\n                <div>\n                    <Input label=\"OTP\" value={this.state.otp} onChange={(e) => this.setState({ otp: e.target.value })} />\n                    <Button waves='light' className={classes.content} onClick={this.handleOtp}>Submit</Button>\n                </div>\n            );\n        }\n        if (this.state.isLoading) {\n            continueBtn = (\n                <div>\n                    <Input label=\"OTP\" value={this.state.otp} onChange={(e) => this.setState({ otp: e.target.value })} disabled={true} />\n                    <div className={classes.preloader}><Preloader size='small' /></div>\n                </div>\n            )\n        }\n\n        let error = null;\n        if (this.state.isError) {\n            error = <span className={classes.error}>{this.state.errorMsg}</span>\n        }\n\n        return (\n            <div className={classes.container}>\n                <div className={classes.content}>\n                    {error}\n                    <Input label=\"Mobile No.\" value={this.state.phoneNumber} onChange={(e) => this.setState({ phoneNumber: e.target.value })} />\n                    {continueBtn}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        authLoading: state.ui.authLoading,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signIn: (phoneNumber, appVerifier, isNewUser) => dispatch(signIn(phoneNumber, appVerifier, isNewUser)),\n        setNewUser: (uid, phone) => dispatch(setNewUser(uid, phone)),\n        setUser: (uid) => dispatch(setUser(uid)),\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './AddProduct.css';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../serverConfig';\nimport { Preloader, Input, Button } from 'react-materialize';\nimport { storage } from '../../firebaseConfig';\nimport { addCategory, addProduct } from '../../store/actions/index';\n\nclass AddProduct extends Component {\n    state = {\n        loading: true,\n        isAdmin: false,\n        file: undefined,\n        selectedCategory: 'select',\n        newCatName: '',\n        newCatStatus: null,\n        productName: '',\n        productPrice: '0',\n        productDescription: '',\n        isError: false,\n        errorMsg: ''\n    }\n    componentDidMount() {\n        setTimeout(() => { this.setState({ loading: false, isAdmin: this.props.isAdmin }) }, 1000);\n    }\n\n    handleFile = (file) => {\n        this.setState({ file: document.getElementById(\"file-handler\").files[0] });\n    }\n\n    handleAddProduct = () => {\n        this.setState({ isError: false, errorMsg: '' });\n        let isCategory = false;\n        let selectedCategory = '';\n        if (this.state.selectedCategory !== 'select' && this.state.selectedCategory !== 'addCategory') {\n            isCategory = true;\n            selectedCategory = this.state.selectedCategory;\n        }\n        if (this.state.selectedCategory === 'addCategory' && this.state.newCatName.trim() !== '' && this.state.newCatStatus === 'added') {\n            isCategory = true;\n            selectedCategory = this.state.newCatName;\n        }\n\n        if (this.state.productName.trim() && parseInt(this.state.productPrice.trim()) && isCategory) {\n            let file = this.state.file;\n            let storageRef = storage.ref(selectedCategory + '/' + this.state.productName.trim());\n            let that = this;\n            if (file && file !== undefined) {\n                storageRef.put(file).then(function (snapshot) {\n                    console.log('Uploaded a blob or file!');\n                    that.props.addProduct(that.state.productName, selectedCategory, that.state.productPrice, that.state.productDescription, true)\n                        .then(result => { window.Materialize.toast(result, 5000) });\n                });\n            } else {\n                this.props.addProduct(this.state.productName, selectedCategory, this.state.productPrice, this.state.productDescription, false).then(result => { window.Materialize.toast(result, 5000) });\n            }\n        } else {\n            console.log(this.state.productName.trim(), parseInt(this.state.productPrice.trim()), isCategory, selectedCategory);\n            this.setState({ isError: true, errorMsg: 'Error in one of the fields.' });\n        }\n    }\n\n    categoryChangeHandler = (e) => {\n        if (e.target.value !== 'select')\n            this.setState({ selectedCategory: e.target.value, newCatStatus: null, newCatName: '' });\n        console.log(e.target.value);\n    }\n\n    newCategoryHandler = () => {\n        if (this.state.newCatName.trim()) {\n            this.props.addCategory(this.state.newCatName)\n                .then(result => this.setState({ newCatStatus: result }))\n                .catch(err => this.setState({ newCatStatus: err }))\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className={classes.container}>\n                    <Preloader size=\"small\" />\n                </div>\n            )\n        }\n        if (!this.state.isAdmin) {\n            return <Redirect\n                to={{\n                    pathname: BASE_URL + \"/auth\",\n                }}\n            />\n        }\n\n        let addCategory = null;\n        if (this.state.selectedCategory === 'addCategory') {\n            addCategory = (\n                <div>\n                    <Input placeholder=\"\" label=\"Category Name\" value={this.state.newCatName} onChange={(e) => this.setState({ newCatName: e.target.value })} />\n                    <Button waves=\"light\" onClick={this.newCategoryHandler}>Add</Button>\n                </div>\n            )\n        }\n\n        let categories = null;\n        if (this.props.categories) {\n            categories = this.props.categories.map((category, index) => {\n                return <option value={category} key={index}>{category}</option>\n            })\n        }\n\n        return (\n            <div className={classes.container}>\n                <h3>Add a product</h3>\n                {/* <img id=\"myimg\"></img> */}\n                <Input placeholder=\"\" label=\"Name\" onChange={(e) => this.setState({ productName: e.target.value })} />\n                <span>{this.state.newCatStatus}</span>\n                <Input type='select' label=\"Category\" onChange={this.categoryChangeHandler}>\n                    <option value='select' selected={true}>Select</option>\n                    {categories}\n                    <option value='addCategory'>New category</option>\n                </Input>\n                {addCategory}\n                <Input placeholder=\"\" label=\"Price\" onChange={(e) => this.setState({ productPrice: e.target.value })} />\n                <Input placeholder=\"\" label=\"Description\" onChange={(e) => this.setState({ productDescription: e.target.value })} />\n                <Input accept=\"image/*\" type=\"file\" label=\"Image\" id=\"file-handler\" onChange={this.handleFile} />\n                <Button waves='light' onClick={this.handleAddProduct}>Add Product</Button>\n                {this.state.isError ? <span className={classes.errorMsg}>{this.state.errorMsg}</span> : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAdmin: state.auth.isAdmin,\n        userLoading: state.ui.userLoading,\n        categories: state.products.categories\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addCategory: (name) => dispatch(addCategory(name)),\n        addProduct: (name, category, price, description, isImg) => dispatch(addProduct(name, category, price, description, isImg))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProduct);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { storage } from '../../../firebaseConfig';\nimport classes from './Product.css';\nimport { Icon } from 'react-materialize';\nimport { addToCart, doesExistInCart } from '../../../store/actions/index';\n\nclass Product extends Component {\n    componentDidMount() {\n        if (this.props.info.isImg) {\n            let imageRef = storage.ref(this.props.info.category + '/' + this.props.info.name);\n            imageRef.getDownloadURL().then(function (url) {\n                // `url` is the download URL for 'images/stars.jpg'\n\n                // Or inserted into an <img> element:\n                var img = document.getElementById('myimg');\n                img.src = url;\n            }).catch(function (error) {\n                // Handle any errors\n            });\n        }\n    }\n\n    addProductHandler = () => {\n        this.props.doesExistInCart(this.props.fbKey)\n        .then(result => {\n            if(result === 'exists') {\n                window.Materialize.toast('Product exists in cart!', 3000);\n            } else if(result==='notExists') {\n                let item = {...this.props.info};\n                item.key = this.props.fbKey;\n                item.qty = 1;\n                this.props.addToCart(item);\n                window.Materialize.toast('Added to cart!', 3000);\n            } else {\n                window.Materialize.toast('Error occurred!', 3000);\n            }\n        })    \n    }\n\n    render() {\n        return (\n            <div className={classes.container}>\n                <img id=\"myimg\" className={classes.image}></img>\n                <div className={classes.content}>\n                    <span className={classes.name}>{this.props.info.name}</span>\n                    <span className={classes.price}>&#8377; {this.props.info.price}</span>\n                    <span className={classes.description}>{this.props.info.description}</span>\n                    <div className={classes.addToCart} onClick={this.addProductHandler}>\n                        <Icon>add_shopping_cart</Icon>\n                        <span className={classes.add}>ADD</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.products.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (item) => dispatch(addToCart(item)),\n        doesExistInCart: (key) => dispatch(doesExistInCart(key))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Product from '../Product/Product';\nimport classes from './Products.css';\n\nclass Products extends Component {\n    render() {\n        let products = <span>No products found</span>;\n        if(this.props.products && this.props.products[this.props.category]) {\n            products = Object.keys(this.props.products[this.props.category]).map(key => {\n                return <Product info={this.props.products[this.props.category][key]} fbKey={key} />\n            })\n        }\n        return (\n            <div className={classes.container}>\n                {products}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.products.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-materialize';\nimport Products from '../Products/Products';\n\nclass Categories extends Component {\n    render() {\n        let categories = null;\n        if (this.props.categories) {\n            categories = this.props.categories.map((category, index) => {\n                return (\n                    <Tab title={category} active={index === 0 ? true : false}>\n                        <Products category={category}/>\n                    </Tab>\n                )\n            })\n        }\n        return (\n            <Tabs className='tab-demo z-depth-1'>\n                {categories}\n            </Tabs>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        categories: state.products.categories\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React, {Component} from 'react';\nimport Categories from './Categories/Categories';\nimport {connect} from 'react-redux';\nimport {Preloader} from 'react-materialize';\nimport classes from './Home.css';\n\nclass Home extends Component {\n    render () {\n        if(this.props.isProductsLoading || this.props.isUiLoading) {\n            return (\n                <div className={classes.loaderContainer}>\n                    <Preloader size=\"small\" />\n                </div>\n            )\n        }\n        return (\n            <Categories />\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isProductsLoading: state.ui.productsLoding,\n        isUiLoading: state.ui.uiLoading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {Component} from 'react';\nimport {Icon} from 'react-materialize';\nimport {connect} from 'react-redux';\nimport {setProductQty} from '../../store/actions/index';\nimport classes from './Quantity.css';\n\nclass Quantity extends Component {\n    state = {\n        quantity: ''\n    }\n    componentDidMount() {\n        this.setState({quantity: this.props.quantity})\n    }\n\n    removeQtyHandler = () => {\n        let quantity = this.state.quantity;\n        if(quantity === 1) {\n            window.Materialize.toast(\"Cannot decrease quantity further\", 3000);\n        } else {\n            quantity--;\n            this.setState({quantity});\n            this.props.setQty(this.props.fbKey, quantity);\n        }\n    }\n\n    addQtyHandler = () => {\n        let quantity = this.state.quantity;\n        if(quantity === 20) {\n            window.Materialize.toast(\"Cannot increase quantity further\", 3000);\n        } else {\n            quantity++;\n            this.setState({quantity});\n            this.props.setQty(this.props.fbKey, quantity);\n        }\n    }\n\n    render () {\n        return (\n            <div className={classes.container}>\n                <span onClick={this.removeQtyHandler} className={classes.iconContainer}>\n                    <Icon className={classes.icon}>remove_circle_outline</Icon>\n                </span>\n                <span className={classes.qty}>{this.state.quantity}</span>\n                <span onClick={this.addQtyHandler} className={classes.iconContainer}>\n                    <Icon className={classes.icon}>add_circle_outline</Icon>\n                </span>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setQty: (key, qty) => dispatch(setProductQty(key, qty))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quantity);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-materialize';\nimport { } from '../../../store/actions/index';\nimport classes from './Summary.css';\nimport {Redirect} from 'react-router-dom';\nimport {BASE_URL} from '../../../serverConfig';\n\nclass Summary extends Component {\n    state = {\n        placeOrder: false\n    }\n    render() {\n        let orderBtn = <Button onClick={() => this.setState({placeOrder: true})}>Place Order</Button>\n        if(!this.props.total) {\n            orderBtn = <Button disabled={true}>Cart empty</Button>\n        }\n\n        if(this.state.placeOrder) {\n            return (\n                <Redirect \n                    to={BASE_URL + '/order'}\n                />\n            )\n        }\n        \n        return (\n            <div className={classes.container}>\n                <span className={classes.total}>Total price: &#8377; {this.props.total}</span>\n                {orderBtn}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        total: state.cart.total\n    }\n}\n\nexport default connect(mapStateToProps)(Summary);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CardPanel, Preloader, Icon, Chip } from 'react-materialize';\nimport classes from './Cart.css';\nimport { removeItemFromCart } from '../../store/actions/index';\nimport Quantity from '../Quantity/Quantity';\nimport Summary from './Summary/Summary';\n\nclass Cart extends Component {\n    removeItemHandler = (key) => {\n        this.props.removeItem(key);\n    }\n\n    render() {\n        if (this.props.cartLoading) {\n            return (\n                <div className={classes.container}>\n                    <Preloader />\n                </div>\n            )\n        }\n\n        let cart = this.props.cart.map(item => {\n            return (\n                <CardPanel className={`white lighten-4 black-text ${classes.card}`}>\n                    <span className={classes.name}>{item.name}</span>\n                    <span className={classes.price}>{item.qty} x {item.price} = &#8377; {item.qty * item.price}</span>\n                    <span className={classes.quantity}><Quantity quantity={item.qty} fbKey={item.key} /></span>\n                    <span className={classes.category}>Category: {item.category}</span>\n                    <span className={classes.removeBtn} onClick={() => this.removeItemHandler(item.key)}><Icon>close</Icon></span>\n                </CardPanel>\n            )\n        })\n\n        let cartHeading = <span className={classes.heading}>Cart</span>\n        if (this.props.cart.length === 0) {\n            cartHeading = <span className={classes.heading}>Cart is empty</span>\n        }\n\n        return (\n            <div className={classes.container}>\n                <Summary />\n                <div className={classes.content}>\n                    {cartHeading}\n                    {cart}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cartLoading: state.ui.cartLoading,\n        cart: state.cart.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        removeItem: (key) => dispatch(removeItemFromCart(key))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAddresses, addAddress, deleteAddress } from '../../store/actions/index';\nimport classes from './Addresses.css';\nimport { Preloader, Button, Input, CardPanel, Icon} from 'react-materialize';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../serverConfig';\n\nclass Addresses extends Component {\n    state = {\n        loading: true,\n        user: null,\n        newAddressWindow: false,\n        houseNo: '',\n        locality: '',\n        pinCode: '',\n        city: '',\n        state: '',\n        Icon\n    }\n\n    componentDidMount() {\n        setTimeout(() => { this.setState({ loading: false, user: this.props.user }); this.props.getAddresses(); }, 500);\n    }\n\n    addAddressHandler = () => {\n        console.log(this.state.houseNo.trim(), this.state.locality.trim(), parseInt(this.state.pinCode.trim()), this.state.city.trim(), this.state.state.trim());\n        if (this.state.houseNo.trim() && this.state.locality.trim() && parseInt(this.state.pinCode.trim()) && this.state.city.trim() && this.state.state.trim()) {\n            let object = {\n                houseNo: this.state.houseNo,\n                locality: this.state.locality,\n                pinCode: parseInt(this.state.pinCode),\n                city: this.state.city,\n                state: this.state.state\n            }\n            this.props.addAddress(object);\n            this.setState({\n                newAddressWindow: false,\n                houseNo: '',\n                locality: '',\n                pinCode: '',\n                city: '',\n                state: ''\n            })\n            window.Materialize.toast('Address added!', 3000);\n        } else {\n            window.Materialize.toast('Problem with one or more fields', 3000);\n        }\n    }\n\n    inputHandler = (e, value) => {\n        this.setState({ [value]: e.target.value })\n    }\n\n    deleteAddressHandler = (index) => {\n        this.props.deleteAddress(index);\n        window.Materialize.toast(\"Deleted address\", 3000);\n    }\n\n    render() {\n        if (this.state.loading || this.props.uiLoading) {\n            return (\n                <div className={classes.container}>\n                    <Preloader />\n                </div>\n            )\n        }\n\n        if (!this.state.loading && !this.props.user) {\n            return <Redirect\n                to={{\n                    pathname: BASE_URL + \"/auth\",\n                }}\n            />\n        }\n\n        let addresses = <span>No addresses found</span>\n        if (this.props.addresses.length > 0) {\n            addresses = this.props.addresses.map((address, index) => {\n                return (\n                    <CardPanel className={`white lighten-4 black-text ${classes.addCard}`}>\n                        <span className={classes.title}>{address.city}, {address.state}</span>\n                        <span className={classes.subtitle}>{address.houseNo}, {address.locality}, {address.city}, {address.state}</span>\n                        <span className={classes.pinCode}>Pin code: {address.pinCode}</span>\n                        <span className={classes.removeBtn} onClick={() => this.deleteAddressHandler(index)}><Icon>close</Icon></span>\n                    </CardPanel>\n                )\n            })\n        }\n\n        if (this.state.newAddressWindow) {\n            addresses = (\n                <div className={classes.container}>\n                    <Input placeholder=\"\" label=\"House No.\" onChange={(e) => this.inputHandler(e, \"houseNo\")} />\n                    <Input placeholder=\"\" label=\"Locality\" onChange={(e) => this.inputHandler(e, \"locality\")} />\n                    <Input placeholder=\"\" label=\"Pin Code\" onChange={(e) => this.inputHandler(e, \"pinCode\")} />\n                    <Input placeholder=\"\" label=\"City\" onChange={(e) => this.inputHandler(e, \"city\")} />\n                    <Input placeholder=\"\" label=\"State\" onChange={(e) => this.inputHandler(e, \"state\")} />\n                    <Button onClick={this.addAddressHandler}>Add Address</Button>\n                </div>\n            )\n        }\n\n        let button = <Button floating large className='red' waves='light' icon='add' className={classes.addBtn} onClick={() => this.setState({ newAddressWindow: true })} />;\n        if (this.state.newAddressWindow) {\n            button = <Button floating large className='red' waves='light' icon='close' className={classes.addBtn} onClick={() => this.setState({ newAddressWindow: false })} />;\n        }\n\n        return (\n            <div className={classes.container}>\n                {addresses}\n                {button}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        uiLoading: state.ui.uiLoading,\n        addresses: state.addresses.addresses\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAddresses: () => dispatch(getAddresses()),\n        addAddress: (address) => dispatch(addAddress(address)),\n        deleteAddress: (index) => dispatch(deleteAddress(index))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Addresses);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader, Button, Input } from 'react-materialize';\nimport classes from './Order.css';\nimport Auth from '../Auth/Auth';\nimport Addresses from '../Addresses/Addresses';\nimport { placeOrder } from '../../store/actions/index';\nimport { Redirect } from 'react-router-dom';\nimport {BASE_URL} from '../../serverConfig';\n\nclass Order extends Component {\n    state = {\n        loading: true,\n        deliveryTime: 'immediate',\n        orderPlaced: false,\n        shopMore: false,\n        address: 'select'\n    }\n\n    componentDidMount() {\n        setTimeout(() => { this.setState({ loading: false, user: this.props.user }); }, 500);\n    }\n\n    onTimeChanged = (e) => {\n        this.setState({\n            deliveryTime: e.currentTarget.value\n        });\n        console.log(e.currentTarget.value);\n    }\n\n    placeOrderHandler = () => {\n        if (this.props.total <= 0) {\n            window.Materialize.toast(\"Error occurred!\", 3000);\n        } else {\n            if (this.state.address === 'select' || !this.state.address) {\n                window.Materialize.toast(\"Please select an address\", 3000);\n            } else {\n                let orderObj = {};\n                orderObj.cart = this.props.cart;\n                orderObj.deliveryTime = this.state.deliveryTime;\n                orderObj.total = this.props.total;\n                orderObj.address = this.props.addresses[parseInt(this.state.address)];\n                this.props.placeOrder(orderObj)\n                    .catch(err => {\n                        window.Materialize.toast(\"Error occurred!\", 3000)\n                    })\n                    .then(result => {\n                        if (result === \"order placed\") {\n                            this.setState({ orderPlaced: true });\n                            window.Materialize.toast(\"Order placed!\", 3000);\n                            setTimeout(() => { this.setState({ shopMore: true }) }, 3000)\n                        } else {\n                            window.Materialize.toast(\"Error occurred!\", 3000)\n                        }\n                    });\n            }\n        }\n    }\n\n    addHandler = (value) => {\n        this.setState({ address: value });\n    }\n\n    render() {\n        if (this.state.shopMore) {\n            return (\n                <Redirect\n                    to={BASE_URL + '/'}\n                />\n            )\n        }\n\n        if (this.state.orderPlaced) {\n            return (\n                <div className={classes.container}>\n                    <span className={classes.thanks}>Thanks for orderding!</span>\n                    <span>You will be contacted soon by us at {this.props.user.uphone}</span>\n                    <Button onClick={() => this.setState({ shopMore: true })} className={classes.continueBtn}>Continue shopping</Button>\n                    <span>(You will be automatically redirected soon)</span>\n                </div>\n            )\n        }\n        if (this.state.loading || this.props.uiLoading) {\n            return (\n                <div className={classes.container}>\n                    <Preloader />\n                </div>\n            )\n        }\n\n        if (!this.props.user) {\n            return (\n                <div className={classes.container}>\n                    <span className={classes.topMsg}>Please log in to continue</span>\n                    <Auth />\n                </div>\n            )\n        }\n\n        if (this.props.addresses.length === 0) {\n            return (\n                <div className={classes.container}>\n                    <span className={classes.topMsg}>Please add an addresses to continue</span>\n                    <Addresses />\n                </div>\n            )\n        }\n\n        if (this.props.total === 0) {\n            return (\n                <div className={classes.container}>\n                    <h3>Cart is empty</h3>\n                </div>\n            )\n        }\n\n        let expensiveMsg = null;\n        if (this.props.total > 500) {\n            expensiveMsg = \"Note: You might be asked to PayTM order charges since your total exceeds 500\";\n        }\n\n        return (\n            <div className={classes.container}>\n                <div className={classes.content}>\n                    <span className={classes.title}>Place Order</span>\n                    <span className={classes.total}>Total: &#8377; {this.props.total}</span>\n                    <span className={classes.expensiveMsg}>We only deliver between 10 AM - 8 PM</span>\n                    <span className={classes.expensiveMsg}>{expensiveMsg}</span>\n                    <span className={classes.selectTime}>Select address:</span>\n                    <Input type='select' label=\"Address\" onChange={(e) => this.addHandler(e.target.value)}>\n                        <option value=\"select\">Select</option>\n                        {\n                            this.props.addresses.map((address, index) => {\n                                return <option value={index} onChange={(e) => this.addHandler(e.target.value)}>{`${address.houseNo} ${address.locality}, ${address.city}, ${address.state}`}</option>\n                            })\n                        }\n                    </Input>\n                    <span className={classes.selectTime}>Select delivery time:</span>\n                    <div className={classes.timeBtns}>\n                        <div onClick={() => this.setState({ deliveryTime: 'immediate' })} className={this.state.deliveryTime === 'immediate' ? `${classes.selectedTime} ${classes.time}` : classes.time}>Immediate</div>\n                        <div onClick={() => this.setState({ deliveryTime: 'later' })} className={this.state.deliveryTime === 'later' ? `${classes.selectedTime} ${classes.time}` : classes.time}>Decide on call</div>\n                    </div>\n                    <Button className={classes.orderBtn} onClick={this.placeOrderHandler}>Order</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        addresses: state.addresses.addresses,\n        total: state.cart.total,\n        cart: state.cart.cart,\n        addresses: state.addresses.addresses\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        placeOrder: (order) => dispatch(placeOrder(order))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader, CardPanel, CollectionItem, Collection } from 'react-materialize';\nimport { getOrders } from '../../store/actions/index';\nimport classes from './Orders.css';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../serverConfig';\n\nclass Orders extends Component {\n    state = {\n        loading: true,\n        user: null,\n        orders: null\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ loading: false, user: this.props.user });\n            this.props.getOrders()\n                .then(orders => {\n                    if(orders!=='error')\n                        this.setState({ orders })\n                })\n        }, 300);\n    }\n\n    render() {\n        if (this.state.loading || this.props.uiLoading) {\n            return (\n                <div className={classes.container}>\n                    <Preloader size=\"small\" />\n                </div>\n            )\n        }\n\n        if (!this.state.loading && !this.props.user) {\n            return <Redirect\n                to={{\n                    pathname: BASE_URL + \"/auth\",\n                }}\n            />\n        }\n\n        let orders = null;\n        if (this.state.orders) {\n            if (this.state.orders.length === 0) {\n                orders = <span className={classes.subtitle}>No past orders</span>\n            }\n            if (this.state.orders.length > 0) {\n                orders = this.state.orders.reverse().map((order, index) => {\n                    let cart = order.cart.map(item => {\n                        return (\n                            <CollectionItem className={classes.itemsCollectionItem}>\n                                <span className={classes.itemSpan}>Name: {item.name}</span>\n                                <span className={classes.itemSpan}>Quantity: {item.qty}</span>\n                                <span className={classes.itemSpan}>Price: {item.price}</span>\n                            </CollectionItem>\n                        )\n                    })\n                    return (\n                        <CardPanel className={`white lighten-4 black-text ${classes.card}`}>\n                            <span className={classes.orderTitle}>Order #{this.state.orders.length - index}</span>\n                            <span className={classes.orderTime}>Total: &#8377; {order.total}</span>\n                            <span className={classes.orderTime}>{order.time}</span>\n                            <span className={classes.orderAdd}>Delivered to: {`${order.address.houseNo} ${order.address.locality}, ${order.address.city}, ${order.address.state}, Pin Code: ${order.address.pinCode}`}</span>\n                            <span className={classes.itemsHeading}>Items:</span>\n                            <Collection>\n                                {cart}\n                            </Collection>\n                        </CardPanel>\n                    )\n                })\n            }\n        }\n\n        return (\n            <div className={classes.container}>\n                <div className={classes.content}>\n                    <span className={classes.title}>My Orders</span>\n                    {orders}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAdmin: state.auth.isAdmin,\n        uiLoading: state.ui.uiLoading,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getOrders: () => dispatch(getOrders())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// import db from './firebaseConfig';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {BASE_URL} from './serverConfig';\n\nimport Layout from './components/Layout/Layout';\nimport Auth from './components/Auth/Auth';\nimport AddProduct from './components/AddProduct/AddProduct';\nimport Home from './components/Home/Home';\nimport Cart from './components/Cart/Cart';\nimport Addresses from './components/Addresses/Addresses';\nimport Order from './components/Order/Order';\nimport Orders from './components/Orders/Orders';\n\nimport { getUsers, getUser, getCategories, getProducts, getCart } from './store/actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getProducts();\n    this.props.getUser();\n    this.props.getUsers();\n    this.props.getCategories();\n    this.props.getCart();\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path={BASE_URL+\"/\"} exact component={Home} />\n            <Route path={BASE_URL+\"/auth\"} exact component={Auth} />\n            <Route path={BASE_URL+\"/add\"} exact component={AddProduct} />\n            <Route path={BASE_URL+\"/cart\"} exact component={Cart} />\n            <Route path={BASE_URL+\"/addresses\"} exact component={Addresses} />\n            <Route path={BASE_URL+\"/order\"} exact component={Order} />\n            <Route path={BASE_URL+\"/orders\"} exact component={Orders} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUsers: () => dispatch(getUsers()),\n    getUser: () => dispatch(getUser()),\n    getCategories: () => dispatch(getCategories()),\n    getProducts: () => dispatch(getProducts()),\n    getCart: () => dispatch(getCart())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { STORE_USERS, STORE_USER } from \"../actions/actionTypes\";\n\nconst initialState = {\n    isAuthenticated: false,\n    users: {},\n    user: null,\n    isAdmin: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case STORE_USERS:\n            return {\n                ...state,\n                users: action.users\n            }\n        case STORE_USER:\n            let isAdmin = false;\n            if(action.user) {\n                if(action.user.uphone === '+911234567890')\n                    isAdmin = true;\n            }\n            return {\n                ...state,\n                user: action.user,\n                isAdmin\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;","import { AUTH_START_LOADING, AUTH_STOP_LOADING, USER_START_LOADING, USER_STOP_LOADING, UI_START_LOADING, UI_STOP_LOADING, PRODUCTS_START_LOADING, PRODUCTS_STOP_LOADING, CART_START_LOADING, CART_STOP_LOADING } from '../actions/actionTypes';\n\nconst initialState = {\n    authLoading: false,\n    userLoading: false,\n    uiLoading: false,\n    productsLoading: false,\n    cartLoading: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AUTH_START_LOADING:\n            return {\n                ...state,\n                authLoading: true\n            }\n        case AUTH_STOP_LOADING: {\n            return {\n                ...state,\n                authLoading: false\n            }\n        }\n        case USER_START_LOADING:\n            return {\n                ...state,\n                userLoading: true\n            }\n        case USER_STOP_LOADING: {\n            return {\n                ...state,\n                userLoading: false\n            }\n        }\n        case UI_START_LOADING:\n            return {\n                ...state,\n                uiLoading: true\n            }\n        case UI_STOP_LOADING: {\n            return {\n                ...state,\n                uiLoading: false\n            }\n        }\n        case PRODUCTS_START_LOADING:\n            return {\n                ...state,\n                productsLoading: true\n            }\n        case PRODUCTS_STOP_LOADING: {\n            return {\n                ...state,\n                productsLoading: false\n            }\n        }\n        case CART_START_LOADING:\n            return {\n                ...state,\n                cartLoading: true\n            }\n        case CART_STOP_LOADING: {\n            return {\n                ...state,\n                cartLoading: false\n            }\n        }\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n\nexport default reducer;","import { STORE_CATEGORIES, STORE_NEW_CATEGORY, STORE_PRODUCTS, ADD_PRODUCT_IN_STORE } from \"../actions/actionTypes\";\n\nconst initialState = {\n    categories: [],\n    products: {}\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case STORE_CATEGORIES:\n            return {\n                ...state,\n                categories: action.categories\n            }\n        case STORE_NEW_CATEGORY:\n            let categories = [];\n            if(state.categories)\n                categories = [...state.categories];\n            categories.push(action.name);\n            return {\n                ...state,\n                categories\n            }\n        case STORE_PRODUCTS:\n            return {\n                ...state,\n                products: action.products\n            }\n        case ADD_PRODUCT_IN_STORE:\n            let products = Object.assign({}, state.products);\n            if(products[action.productObj.category])\n                products[action.productObj.category][action.key] = action.productObj;\n            else {\n                products[action.productObj.category] = {};\n                products[action.productObj.category][action.key] = action.productObj;\n            }\n            return {\n                ...state,\n                products\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;","import { STORE_CART, ADD_TO_CART, REMOVE_ITEM_FROM_CART, SET_PRODUCT_QTY } from \"../actions/actionTypes\";\n\nconst initialState = {\n    cart: [],\n    total: 0\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case STORE_CART: {\n            let total = computeTotal(action.cart);\n            return {\n                ...state,\n                cart: action.cart,\n                total\n            }\n        }\n        case ADD_TO_CART: {\n            let cart = [...state.cart];\n            cart.push(action.item);\n            let total = computeTotal(cart);\n            localStorage.removeItem('sn-cart');\n            localStorage.setItem('sn-cart', JSON.stringify(cart));\n            return {\n                ...state,\n                cart,\n                total\n            }\n        }\n        case REMOVE_ITEM_FROM_CART: {\n            let cart = [...state.cart];\n            cart = cart.filter(item => item.key !== action.key);\n            let total = computeTotal(cart);\n            localStorage.removeItem('sn-cart');\n            localStorage.setItem('sn-cart', JSON.stringify(cart));\n            return {\n                ...state,\n                cart,\n                total\n            }\n        }\n        case SET_PRODUCT_QTY: {\n            let cart = [...state.cart];\n            cart.map(item => {\n                if(item.key === action.key) {\n                    item.qty = action.qty;\n                }\n            })\n            let total = computeTotal(cart);\n            localStorage.removeItem('sn-cart');\n            localStorage.setItem('sn-cart', JSON.stringify(cart));\n            return {\n                ...state,\n                cart,\n                total\n            }\n        }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nconst computeTotal = (cart) => {\n    let total = 0;\n    cart.map(item => {\n        total += item.qty * item.price;\n    })\n    return total;\n}\n\nexport default reducer;","import { STORE_ADDRESSES, STORE_NEW_ADDRESS, DELETE_ADDRESS_FROM_STORE } from '../actions/actionTypes';\n\nconst initialState = {\n    addresses: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case STORE_ADDRESSES: {\n            let addresses = action.addresses;\n            if(!action.addresses)\n                addresses = []\n            return {\n                ...state,\n                addresses\n            }\n        }\n        case STORE_NEW_ADDRESS: {\n            let addresses = [...state.addresses];\n            addresses.push(action.address);\n            return {\n                ...state,\n                addresses\n            }\n        }\n        case DELETE_ADDRESS_FROM_STORE: {\n            let addresses = [...state.addresses];\n            addresses.splice(action.index, 1);\n            return {\n                ...state,\n                addresses\n            }\n        }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;","import {STORE_ORDERS, STORE_NEW_ORDER} from '../actions/actionTypes';\n\nconst initialState = {\n    orders: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case STORE_ORDERS: {\n            let orders = action.orders;\n            if(!orders)\n                orders = [];\n            return {\n                ...state,\n                orders\n            }\n        }\n        case STORE_NEW_ORDER: {\n            let orders = [...state.orders];\n            let newOrder = action.order;\n            newOrder.time = action.time;\n            orders.push(newOrder);\n            return {\n                ...state,\n                orders\n            }\n        }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport auth from './reducers/auth';\nimport ui from './reducers/ui';\nimport products from './reducers/products';\nimport cart from './reducers/cart';\nimport addresses from './reducers/addresses';\nimport orders from './reducers/orders';\n\nexport default combineReducers({\n    auth,\n    ui,\n    products,\n    cart,\n    addresses,\n    orders\n})","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [\n  thunk\n]\n\nif (process.env.NODE_ENV === 'development') {\n  console.log(\"Development build\");\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n} else {\n  console.log(\"Production build\");\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/storeConfig';\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Orders__container__1qbN8\",\"title\":\"Orders__title__23at4\",\"content\":\"Orders__content__1OyWC\",\"card\":\"Orders__card__jfeAM\",\"orderTitle\":\"Orders__orderTitle__JYji2\",\"orderTime\":\"Orders__orderTime__3xmKp\",\"orderAdd\":\"Orders__orderAdd__sYk9C\",\"itemsHeading\":\"Orders__itemsHeading__1liBX\",\"itemsCollectionItem\":\"Orders__itemsCollectionItem__1dRzz\",\"itemSpan\":\"Orders__itemSpan__3IPQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cart__container__13I7p\",\"content\":\"Cart__content__3fco2\",\"heading\":\"Cart__heading__1-cDY\",\"card\":\"Cart__card__1l5Nk\",\"removeBtn\":\"Cart__removeBtn__3XUUH\",\"name\":\"Cart__name__2V1gW\",\"price\":\"Cart__price__k_ZBl\",\"category\":\"Cart__category__1CQqj\",\"quantity\":\"Cart__quantity__3nXNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Addresses__container__87N4K\",\"addBtn\":\"Addresses__addBtn__2Zu4n\",\"addCard\":\"Addresses__addCard__2sBHr\",\"title\":\"Addresses__title__3kqli\",\"subtitle\":\"Addresses__subtitle__3s3F3\",\"pinCode\":\"Addresses__pinCode__kgoBD\",\"removeBtn\":\"Addresses__removeBtn__3o7m2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Product__container__2byVT\",\"image\":\"Product__image__3UXKK\",\"content\":\"Product__content__VvXai\",\"name\":\"Product__name__2U1nG\",\"price\":\"Product__price__11zfx\",\"description\":\"Product__description__2Qq8c\",\"addToCart\":\"Product__addToCart__2fHHX\",\"add\":\"Product__add__alTc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth__container__WbE4m\",\"content\":\"Auth__content__3HYeu\",\"preloader\":\"Auth__preloader__KJOEb\",\"error\":\"Auth__error__20E-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Quantity__container__2YzRp\",\"qty\":\"Quantity__qty__3uROo\",\"icon\":\"Quantity__icon__1oaH3\",\"iconContainer\":\"Quantity__iconContainer__3ouzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddProduct__container__TQPMa\",\"input\":\"AddProduct__input__13Mxw\",\"errorMsg\":\"AddProduct__errorMsg__3Xlif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Summary__container__2a8PS\",\"total\":\"Summary__total__1vwjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout__content__ciN7r\",\"sidenav\":\"Layout__sidenav__1-mVb\",\"hiddenButton\":\"Layout__hiddenButton__3-gS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Products__container__1mXrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Home__loaderContainer__1cT6k\"};"],"sourceRoot":""}